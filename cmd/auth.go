package cmd

import (
	"context"
	"fmt"

	"github.com/Yuki-Sakaguchi/gh-wizard/internal/github"
	"github.com/Yuki-Sakaguchi/gh-wizard/internal/utils"
	"github.com/spf13/cobra"
)

var authCmd = &cobra.Command{
	Use:   "auth",
	Short: "GitHubË™çË®ºÁä∂ÊÖã„ÅÆÁ¢∫Ë™ç",
	Long:  "GitHub CLI „ÅÆË™çË®ºÁä∂ÊÖã„Å®„É¶„Éº„Ç∂„ÉºÊÉÖÂ†±„ÇíÁ¢∫Ë™ç„Åó„Åæ„Åô",
	Run: func(cmd *cobra.Command, args []string) {
		// GitHub CLI „Ç§„É≥„Çπ„Éà„Éº„É´„ÉÅ„Çß„ÉÉ„ÇØ
		if err := utils.CheckGHInstalled(); err != nil {
			fmt.Printf("‚ùå %v\n", err)
			return
		}

		version, _ := utils.GitGHVersion()
		fmt.Printf("‚úÖ GitHub CLI: %s\n", version)

		// Ë™çË®ºÁä∂ÊÖã„ÉÅ„Çß„ÉÉ„ÇØ
		client := github.NewClient()
		if err := client.IsAuthenticated(); err != nil {
			fmt.Printf("‚ùå %v\n", err)
			return
		}

		fmt.Printf("‚úÖ GitHubË™çË®º: OK\n")

		// „É¶„Éº„Ç∂„ÉºÊÉÖÂ†±ÂèñÂæó
		user, err := client.GetCurrentUser()
		if err != nil {
			fmt.Printf("‚ö†Ô∏è „É¶„Éº„Ç∂„ÉºÊÉÖÂ†±ÂèñÂæó„Ç®„É©„Éº: %v\n", err)
			return
		}

		fmt.Printf("üë§ „É¶„Éº„Ç∂„Éº: %s (%s)\n", user.Name, user.Login)

		ctx := context.Background()
		templates, err := client.GetTemplateRepositories(ctx)
		if err != nil {
			fmt.Printf("‚ö†Ô∏è „ÉÜ„É≥„Éó„É¨„Éº„ÉàÂèñÂæó„Ç®„É©„Éº: %v\n", err)
			return
		}

		fmt.Printf("üìö „ÉÜ„É≥„Éó„É¨„Éº„Éà„É™„Éù„Ç∏„Éà„É™: %d‰ª∂\n", len(templates))
		if len(templates) > 0 {
			fmt.Println("  ÊúÄÊñ∞3‰ª∂:")
			for i, template := range templates {
				if i >= 3 {
					break
				}
				fmt.Printf("    - %s (%s) ‚≠ê%d\n", template.Name, template.Language, template.Stars)
			}
		}
	},
}

func init() {
	rootCmd.AddCommand(authCmd)
}
